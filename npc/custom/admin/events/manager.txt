-	shop	Event_Shop	-1,512:100
Crystilia,43,79,5	script	Event Manager	109,{
OnWhisperGlobal:
	if (getgmlevel() >= 80) {
	mes "Hi "+strcharinfo(0)+"!";
	mes "What do you want to do?";
	switch (select("Start Events:Change Settings:Open Shop:Cancel")) {
		case 1:
			switch (select("Start Poring Catcher:Start Disguise:Start Monster Invasion:Start Dice:Start Poring Race:Start Jumper:Spawn Treasure Chests:Spawn Mushrooms:Start Floating Rates:Stop Floating Rates:Nothing")) {
				case 1:
					donpcevent "poring#announcer::OnStart";
					close;
				case 2:
					donpcevent "Disguise Event::OnStart";
					close;
				case 3:
					donpcevent "Monster Invasion Helper::OnEventStart";
					close;
				case 4:
					donpcevent "Dice#announcer::OnStart";
					close;
				case 5:
					donpcevent "PraceAnnouncer::OnHour18";
					close;
				case 6:
					donpcevent "jumpevent::OnAdminStart";
					close;
				case 7:
					donpcevent "TBox Summoner::OnAdminStart";
					close;
				case 8:
					donpcevent "Find the Mushroom::OnAdminStart";
					close;
				case 9:
					donpcevent "FloatingRates::OnStart";
					close;
				case 10:
					donpcevent "FloatingRates::OnEnd";
					close;
				default:
					close;
				}
		case 2:
			next;
			mes "Which settings do you want to change?";
				switch (select("Prize:Prize Amount:Enable Additional Prize:Cance")) {
					case 1:
						next;
						mes "Current Prize: ^00FFFF"+getitemname(.eventprize)+"^000000.";
						mes "Please Input the ItemID of the prize that will be given each round.";
						input .@prize;
						if (getitemname(.@prize)=="" || getitemname(.@prize)=="null") {
							next;
							mes "That item does not exist. Please try again.";
							close;
						}
						next;
						mes "The Prize has been changed successfully.";
						mes "Prize: [^0000FF"+getitemname(.eventprize)+"^000000]";
						close;
					case 2:
						next;
						mes "Which event settings do you want to change?";
							switch (select("Poring Catcher:Disguise:Monster Invasion:Dice:Poring Race:Nothing")) {
								case 1:	// Poring Catcher
									next;
									mes "Current Prize: ^00FFFF"+.poringcatcher+"^000000 pc(s) of "+getitemname(.eventprize)+".";
									mes "Please Input the ItemID of the prize that will be given each round.";
									input .@amount;
									if (.@amount <= 0 || .@amount >= 10000) {
										next;
										mes "That ammount is invalid. Using default ammount of 1.";
										close;
									}
									set .poringcatcher,.@amount;
									next;
									mes "The Prize Amount has been changed successfully.";
									mes "Prize: [^0000FF"+getitemname(.eventprize)+"^000000]x(^0000FF"+.poringcatcher+"^000000)";
									close;
								case 2:	// Disguise
									next;
									mes "Current Prize: ^00FFFF"+.disguise+"^000000 pc(s) of "+getitemname(.eventprize)+".";
									mes "Please Input the ItemID of the prize that will be given each round.";
									input .@amount;
									if (.@amount <= 0 || .@amount >= 10000) {
										next;
										mes "That ammount is invalid. Using default ammount of 1.";
										close;
									}
									set .disguise,.@amount;
									next;
									mes "The Prize Amount has been changed successfully.";
									mes "Prize: [^0000FF"+getitemname(.eventprize)+"^000000]x(^0000FF"+.disguise+"^000000)";
									close;
								case 3:	// Monster Invasion
									next;
									mes "Current Prize: ^00FFFF"+.invasion+"^000000 pc(s) of "+getitemname(.eventprize)+".";
									mes "Please Input the ItemID of the prize that will be given each round.";
									input .@amount;
									if (.@amount <= 0 || .@amount >= 10000) {
										next;
										mes "That ammount is invalid. Using default ammount of 1.";
										close;
									}
									set .invasion,.@amount;
									next;
									mes "The Prize Amount has been changed successfully.";
									mes "Prize: [^0000FF"+getitemname(.eventprize)+"^000000]x(^0000FF"+.invasion+"^000000)";
									close;
								case 4:	// Dice
									next;
									mes "Current Prize: ^00FFFF"+.dice+"^000000 pc(s) of "+getitemname(.eventprize)+".";
									mes "Please Input the ItemID of the prize that will be given each round.";
									input .@amount;
									if (.@amount <= 0 || .@amount >= 10000) {
										next;
										mes "That ammount is invalid. Using default ammount of 1.";
										close;
									}
									set .dice,.@amount;
									next;
									mes "The Prize Amount has been changed successfully.";
									mes "Prize: [^0000FF"+getitemname(.eventprize)+"^000000]x(^0000FF"+.dice+"^000000)";
									close;
								case 5:	// Poring Race
									next;
									mes "Current Prize: ^00FFFF"+.race+"^000000 pc(s) of "+getitemname(.eventprize)+".";
									mes "Please Input the ItemID of the prize that will be given each round.";
									input .@amount;
									if (.@amount <= 0 || .@amount >= 10000) {
										next;
										mes "That ammount is invalid. Using default ammount of 1.";
										close;
									}
									set .race,.@amount;
									next;
									mes "The Prize Amount has been changed successfully.";
									mes "Prize: [^0000FF"+getitemname(.eventprize)+"^000000]x(^0000FF"+.race+"^000000)";
									close;
								default:
									close;
								}
					case 3:
						next;
						mes "Do you want to enable random experience reward for events?";
						switch (select("Yes:No:Cancel")) {
							case 1:
								next;
								set .AddPrize,1;
								mes "Random Experience Reward for events enabled";
								close;
							case 2:
								next;
								set .AddPrize,0;
								mes "Random Experience Reward for events disabled";
								close;
							default:
								close;
						}
					default:
						close;
					}
		case 3:
		goto OpenShop;
		default:
			close;
		}
	}
	else {
	mes "What do you want to do?";
	switch (select("Open Event Shop:Nothing")) {
		case 1:
			goto OpenShop;
		default:
			close;
		}
	}

OpenShop:
			function ShopSettings;
			function ValidateCost;
			function CurrencyInfo;
			function ClearData;
			function ValueConvert;
			function ErrorNotice;

			mes "Each Shop from the Menu may purchase using ^FF0000Event Tickets^000000.";
			mes "^00FF00____________________________^000000";
			mes "So,Which shop you would like to look at it";
			next;
			// Menu Selection
			//select("Shop 1","Shop 2","Shop 3");
			select("Costume Equipments","Headgears");

			ClearData();
			ShopSettings( @menu );
			npcshopitem "Event_Shop",512,100;
			npcshopdelitem "Event_Shop",512;
			for(set .@i,0; .@i < getarraysize( @ItemLists ); set .@i,.@i+1)
				npcshopadditem "Event_Shop",@ItemLists[.@i],@ItemCost[.@i];
			mes "Okay...wait awhile";
			mes "^00FF00____________________________^000000";
			CurrencyInfo( @Currency$ );
			mes "^00FF00____________________________^000000";
			callshop "Event_Shop",1;
			npcshopattach "Event_Shop";
			end;


			function	ShopSettings	{
				switch( getarg(0) ){
					Case 1:
						// Currency [ Item ID / Variable Name ]
						set @Currency$,"7711";
						// Item ID Lists
						setarray @ItemLists[0],18740,19537,19573,19505,19509,19514,19521,19513,19517,19510;
						// Item Price
						setarray @ItemCost[0],1000,500,300,100,100,100,100,100,100,50;
						break;
					Case 2:
						// Currency [ Item ID / Variable Name ]
						set @Currency$,"7711";
						// Item ID Lists
						setarray @ItemLists[0],19587,19544,19545,19552,19525;
						// Item Price
						setarray @ItemCost[0],500,500,50,50,50;
						break;
					default:
						ErrorNotice( "Invalid Menu Selection for Menu "+@menu+"." );
						close;
				}
				
				
			if( @Currency$ == "" )
				ErrorNotice( "Invalid Currency Setting in Menu "+@menu+" ." );
			if( getarraysize( @ItemCost ) != getarraysize( @ItemLists ) || getarraysize( @ItemLists ) != getarraysize( @ItemCost ) )
				ErrorNotice( "Missing or Extra Value of Item or Cost Settings in Menu "+@menu+" ." );
			return;
			}

			function	ErrorNotice	{
				mes "^FF0000ERROR^000000 - "+getarg(0);
				mes "^00FF00____________________________^000000";
				mes "Inform this Message to ^0000FFGame Staffs^000000 immediately !";
				close;
			}

			function	CurrencyInfo	{
				if( getitemname( atoi( getarg(0) ) ) != "null" ){
					mes "Item Currency : ^FF0000"+getitemname( atoi( getarg(0) ) )+"^000000";
					mes "Available Amount : ^0000FF"+ValueConvert( countitem( atoi( getarg(0) ) ) )+"^000000";
				}else if( getitemname( atoi( getarg(0) ) ) == "null" ){
					mes "Variable Currency : ^FF0000"+getarg(0)+"^000000";
					mes "Available Amount : ^0000FF"+ValueConvert( getd( getarg(0) ) )+"^000000";
				}
			return;
			}

			function	ValidateCost	{
				if( getitemname( atoi( getarg(0) ) ) != "null" ){
					if( countitem( atoi( getarg(0) ) ) < getarg(1) ) return 1;
				}else{
					if( getd( getarg(0) ) < getarg(1) ) return 1;
				}
			return 0;
			}

			function ClearData	{
				set @Currency$,"";
				set @TotalCost,0;
				deletearray @bought_nameid[0],getarraysize( @bought_nameid );
				deletearray @bought_quantity[0],getarraysize( @bought_quantity );
				deletearray @ItemLists[0],getarraysize( @ItemLists );
				deletearray @ItemCost[0],getarraysize( @ItemCost );
			return;
			}

			function	ValueConvert	{
				set .@num, atoi(""+getarg(0));
				if ( .@num == 0 || .@num >= 2147483647 ) return getarg(0);
				set .@l, getstrlen(""+.@num);
				for ( set .@i,0; .@i < .@l; set .@i, .@i + 1 ) {
					set .@num$, .@num % pow(10,.@i+1) / pow(10,.@i) + .@num$;
						if ( (.@i+1) % 3 == 0 && .@i+1 != .@l ) set .@num$, ","+ .@num$;
				}
				return .@num$;
			}

			OnBuyItem:
				setarray .@q[0],@bought_nameid[0],((@bought_quantity[0] > .MaxStack)?.MaxStack:@bought_quantity[0]);
	setarray @qe[1], getiteminfo(.@q[0],5), getiteminfo(.@q[0],11);
	if (@qe[2] > 0 && ((@qe[1] & 1) || (@qe[1] & 256) || (@qe[1] & 512) || (@qe[1] & 1024) || (@qe[1] & 2048) || (@qe[1] & 4096) || (@qe[1] & 4) || (@qe[1] & 8192)))
		set .@preview,1;
	addtimer 1000, strnpcinfo(0)+"::OnEnd";
	while(1) {
		switch(select(" ~ Purchase ^0055FF"+getitemname(.@q[0])+"^000000:"+((.@preview && !@qe[7])?" ~ Preview...":"")+": ~ ^777777Cancel^000000")) {
		case 1:
				for(set @i,0; @i < getarraysize( @bought_nameid ); set @i,@i+1)
					for(set @j,0; @j < getarraysize( @ItemLists ); set @j,@j+1)
						if( @ItemLists[@j] == @bought_nameid[@i] )
						set @TotalCost,@TotalCost + ( @ItemCost[@j] * @bought_quantity[@i] );
				mes "^FF0000       BILLING LIST^000000";
				mes "^00FF00____________________________^000000";
				for( set @i,0; @i < getarraysize( @bought_nameid ); set @i,@i+1 )
						mes "^FF0000"+@bought_quantity[@i]+" x ^0000FF"+getitemname( @bought_nameid[@i] )+"^000000";
				mes "^00FF00____________________________^000000";

				if( getitemname( atoi( @Currency$ ) ) != "null" )
					mes "Total Cost : ^0000FF"+ValueConvert( @TotalCost )+" x "+getitemname( atoi( @Currency$ ) )+"^000000";
				else if( getitemname( atoi( @Currency$ ) ) == "null" ){
					mes "Total Cost : ^0000FF"+ValueConvert( @TotalCost )+" "+@Currency$+"^000000";
				}
				
				mes "^00FF00____________________________^000000";
				if( ValidateCost( @Currency$,@TotalCost ) ){
					if( getitemname( atoi( @Currency$ ) ) != "null" )
						mes "[ ^FF0000X^000000 ] Insufficient ^0000FF"+getitemname( atoi( @Currency$ ) )+"^000000";
					else{
						mes "[ ^FF0000X^000000 ] Insufficient ^0000FF"+@Currency$+"^000000";
					}
				}else{
					if( select( "^0000FFPurchase^000000:Cancel" ) == 1 ){
						if( getitemname( atoi( @Currency$ ) ) != "null" )
							delitem atoi( @Currency$ ),@TotalCost;
						else{
							set getd( @Currency$ ),getd( @Currency$ ) - @TotalCost;
						}
						for(set @i,0; @i < getarraysize( @bought_nameid ); set @i,@i+1)
							getitem @bought_nameid[@i],@bought_quantity[@i];
						message strcharinfo(0),"Purchased "+getarraysize( @bought_nameid )+" Items.";
						mes "Thank you for shopping.";
					}
				}
				ClearData();
				close;
			case 2:
			setarray @qe[3], getlook(LOOK_HEAD_BOTTOM), getlook(LOOK_HEAD_TOP), getlook(LOOK_HEAD_MID), getlook(LOOK_ROBE), 1;
			if ((@qe[1] & 1) || (@qe[1] & 4096)) changelook LOOK_HEAD_BOTTOM, @qe[2];
			else if ((@qe[1] & 256) || (@qe[1] & 1024)) changelook LOOK_HEAD_TOP, @qe[2];
			else if ((@qe[1] & 512) || (@qe[1] & 2048)) changelook LOOK_HEAD_MID, @qe[2];
			else if ((@qe[1] & 4) || (@qe[1] & 8192)) changelook LOOK_ROBE, @qe[2];
			break;
			case 3:
				close;
			}
		}

OnEnd:
	if (@qe[7]) {
		changelook LOOK_HEAD_BOTTOM, @qe[3];
		changelook LOOK_HEAD_TOP, @qe[4];
		changelook LOOK_HEAD_MID, @qe[5];
		changelook LOOK_ROBE, @qe[6];
	}
	deletearray @qe[0],8;
	end;

OnInit:
	set .eventprize,7711;	// Item Id for Event Token
	set .poringcatcher,10;	// Original Prize Amount for Poring Catcher
	set .disguise,1;	// Original Prize Amount for Disguise
	set .invasion,50;	// Original Prize Amount for Invasion
	set .dice,10;	// Original Prize Amount for Dice
	set .race,20;	// Original Prize Amount for Poring Race
	set .jumper,5;	// Original Prize Amount for Jumper
	set .mushroom,1;	// Original Prize Amount for Mushroom
	set .tbox,1;	// Original Prize Amount for Treasure Chest

	set .AddPrize,1;	//enable Additional Prize
}