//===== Hercules Script ======================================
//= Euphy's Quest Shop
//===== By: ==================================================
//= Euphy
//===== Current Version: =====================================
//= 1.6a
//===== Compatible With: =====================================
//= Hercules
//===== Description: =========================================
//= A dynamic quest shop based on Lunar's, with easier config.
//= Includes support for multiple shops & cashpoints.
//= Item Preview script by ToastOfDoom.
//===== Additional Comments: =================================
//= 1.0 Initial script.
//= 1.2 Added category support.
//= 1.3 More options and fixes.
//= 1.4 Added debug settings.
//= 1.5 Replaced categories with shop IDs.
//= 1.6 Added support for purchasing stackables.
//= 1.6a Added support for previewing costumes and robes.
//============================================================

// Dummy shop data -- copy as needed.
//============================================================
-	shop	qshop1	-1,909:-1
-	shop	qshop2	-1,909:-1
-	shop	qshop3	-1,909:-1
-	shop	qshop4	-1,909:-1
-	shop	qshop5	-1,909:-1


// Shop NPCs -- supplying no argument displays entire menu.
//	callfunc "qshop"{,<shop ID>{,<shop ID>{,...}}};
//============================================================
mall,115,139,4	script	Hat Maker	408,{ callfunc "qshop"; }


// Script Core
//============================================================
-	script	quest_shop	-1,{ 
function Add; function Chk; function Slot; function A_An;
OnInit:
	freeloop(1);

// -----------------------------------------------------------
//  Basic shop settings.
// -----------------------------------------------------------

	set .Announce,1;	// Announce quest completion? (1: yes / 0: no)
	set .ShowSlot,1;	// Show item slots? (2: all equipment / 1: if slots > 0 / 0: never)
	set .ShowID,1;  	// Show item IDs? (1: yes / 0: no)
	set .ShowZeny,1;	// Show Zeny cost, if any? (1: yes / 0: no)
	set .MaxStack,100;	// Max number of quest items purchased at one time.

// -----------------------------------------------------------
//  Points variable -- optional quest requirement.
//	setarray .Points$[0],"<variable name>","<display name>";
// -----------------------------------------------------------

	setarray .Points$[0],"#CASHPOINTS","Cash Points";

// -----------------------------------------------------------
//  Shop IDs -- to add shops, copy dummy data at bottom of file.
//	setarray .Shops$[1],"<Shop 1>","<Shop 2>"{,...};
// -----------------------------------------------------------

	setarray .Shops$[1],"Quest Headgears 1","Quest Headgears 2","Quest Headgears 3";

// -----------------------------------------------------------
//  Quest items -- do NOT use a reward item more than once!
//	Add(<shop ID>,<reward ID>,<reward amount>,
//	    <Zeny cost>,<point cost>,
//	    <required item ID>,<required item amount>{,...});
// -----------------------------------------------------------

	Add(1,5105,1,0,0,5024,1,538,30,660,3); /*2nd Anniversary Hat*/
	Add(1,5086,1,0,0,1095,3000,2288,1); /*Alarm Mask*/
	Add(1,2284,1,0,0,923,20); /*Antlers*/
	Add(1,5207,1,0,0,2282,5,2254,2,969,1,7063,15); /*Angel Blessing*/
	Add(1,5132,1,0,0,5035,1,5074,1,714,1,999,5); /*Angeling Hat*/
	Add(1,5153,1,0,0,5132,1,10011,1); /*Angeling Pin*/
	Add(1,5389,1,0,0,5043,5,969,10,7568,50); /*angel of ghost*/
	Add(1,5175,1,0,0,7111,100,938,99,983,1); /*Censor Bar*/
	Add(1,5080,1,0,0,10006,1,714,1,969,3); /*aqueen*/
	Add(1,5270,1,0,0,7198,200,7097,40); /*autumn*/
	Add(1,5174,1,0,0,7445,7,7446,7,7447,7,7448,7,945,300,975,1,733,5,7166,50); /*ayam*/
	Add(1,5277,1,0,0,5278,1,508,200); /*bandana*/
	Add(1,2237,1,0,0,1020,100,983,1,2241,1); /*bandit*/
	Add(1,5147,1,0,0,2227,1,978,1,1057,100); /*Base*/
	Add(1,5057,1,0,0,2213,1,983,1,914,200); /*Bcat*/
	Add(1,5076,1,0,0,2227,1,7038,500); /*beanie*/
	Add(1,5236,1,0,0,2227,1,7038,500,978,1); /*beanie b*/
	Add(1,5235,1,0,0,2227,1,7038,500,982,1,983,1); /*beanie g*/
	Add(1,5237,1,0,0,2227,1,7038,500,975,1,982,1); /*beanie p*/
	Add(1,5382,1,0,0,969,8,10016,2,5083,1); /*bellr*/
	Add(1,5065,1,0,0,624,1,959,300,544,50,1023,1); /*bfish*/
	Add(1,5052,1,0,0,2211,1,978,1,7003,300); /*bhair*/
	Add(1,2296,1,0,0,2243,1,999,100); /*bino*/
	Add(1,5129,1,0,0,604,100,916,100); /*bird*/
	Add(1,18561,1,0,0,675,10,951,300,7319,300,916,300,7115,300,5172,5); /*Black Feather beret*/
	Add(1,5102,1,0,0,7263,2,2276,1,2239,1,568,150); /*blank*/
	Add(1,5040,1,0,0,7047,100); /*blush*/
	Add(1,5109,1,0,0,10015,1,10007,1,5023,1,975,1); /*bonnet*/
	Add(1,5016,1,0,0,1030,10); /*boy*/
	Add(1,5110,1,0,0,526,2,7270,1,941,1,10004,1); /*bpack*/
	Add(1,5191,1,0,0,2208,1,983,1); /*bribbon*/
	Add(1,5169,1,0,0,706,1,1019,500,7200,10,1049,20,7165,500,1054,2,1024,100); /*bride*/
	Add(1,5034,1,0,0,2233,1,746,20); /*bulb*/
	Add(1,2214,1,0,0,949,100,706,1,722,1,2213,1); /*bunbun*/
	Add(1,5024,1,0,0,529,10,530,5,539,20,999,10,538,15); /*cake*/
	Add(1,5028,1,0,0,2279,1,7035,50,526,100); /*candle*/
	Add(1,5200,1,0,0,5016,1,981,1,7317,20); /*cappola*/
	Add(1,5184,1,0,0,5120,5,995,50,983,1,720,50); /*captain*/
	Add(1,5214,1,0,0,976,1,1060,300,1022,100,5008,5); /*moonlightflower*/
	Add(1,5026,1,0,0,1036,450,949,330,539,120,982,1); /*chef*/
	Add(1,5142,1,0,0,5017,1,2229,1,5014,1,7209,100,7123,100,1036,100,979,1); /*chelm*/
	Add(1,5283,1,0,0,949,200,916,100,7063,20,925,1); /*chick*/
	Add(1,5431,1,0,0,5283,1,916,50,2717,1); /*chicken*/
	Add(1,5075,1,0,0,2248,1,7030,108,7194,108,7120,4); /*cow*/
	Add(1,5048,1,0,0,5041,1,999,10); /*cpin*/
	Add(1,5036,1,0,0,2608,1,7069,500); /*cross*/
	Add(1,5107,1,0,0,519,50,7031,50,548,50,539,50); /*crunch toast*/
	Add(1,5135,1,0,0,2295,1,969,1,975,1,999,5); /*cyclop*/
	Add(1,5254,1,0,0,5132,1,5068,1,2255,1,7023,5,983,1); /*devil*/
	Add(1,5038,1,0,0,1038,600,7048,40); /*deviruchi*/
	Add(1,5229,1,0,0,1038,600,7048,40,982,1,983,1); /*devirg*/
	Add(1,5227,1,0,0,1038,600,7048,40,975,1); /*devirr*/
	Add(1,5228,1,0,0,1038,600,7048,40,982,1); /*devirw*/
	Add(1,5186,1,0,0,1032,100,7100,100,905,250); /*dgeo*/
	Add(1,5091,1,20000,0,10016,1,714,1,969,3); /*dgoldb*/
	Add(1,5082,1,0,0,921,300); /*dmush*/
	Add(1,2273,1,3500,0,2275,1,998,50,733,1); /*doctor*/
	Add(1,5258,1,0,0,914,100,975,1,976,1,978,1); /*dokebi*/
	Add(1,5198,1,0,0,5058,1,2214,1,949,500,914,200,622,50,1974,1); /*droopb*/
	Add(1,5232,1,0,0,2233,1,983,1,7206,300,7030,1,982,1,975,1); /*droopcp*/
	Add(1,5230,1,0,0,2233,1,983,1,7206,300,7030,1,982,1); /*droopcw*/
	Add(1,5253,1,0,0,1034,300,7445,30,5141,10,979,1); /*droopl*/
	Add(1,5252,1,0,0,5058,1,1022,250,7267,100); /*droopn*/
	Add(1,5058,1,0,0,2233,1,983,1,7206,300,7030,1); /*droopc*/
	Add(1,5233,1,0,0,2233,1,983,1,7206,300,7030,1,978,1); /*droopcb*/
	Add(1,5231,1,0,0,2233,1,983,1,7206,300,7030,1,982,1,983,1); /*droopcg*/
	Add(1,5234,1,0,0,2233,1,983,1,7206,300,7030,1,976,1); /*droopcy*/
	Add(1,5373,1,0,0,2255,1,7566,3,7511,60,5104,1,7799,4,7023,20); /*drangdrisheml*/
	Add(1,2283,1,0,0,724,1,5001,1,949,200); /*ear*/
	Add(1,5243,1,0,0,975,1,976,1,914,100,7441,150,7065,25,2283,1); /*earh*/
	Add(1,5259,1,0,0,978,1,7561,100,949,500,1026,200); /*ele*/
	Add(1,5205,1,0,0,5185,1,610,100,706,25,7194,113); /*elaurel*/
	Add(1,5068,1,20000,0,2255,1,2286,1); /*evil*/
	Add(1,5247,1,0,0,1039,60,923,25,2255,1); /*evilhelm*/
	Add(1,5304,1,0,0,7017,2,2510,1,983,1);	/*exec*/
	Add(1,5210,1,0,0,2254,10,7063,50,7168,200,7038,200);	/*fangel*/
	Add(1,5269,1,0,0,5203,4,7063,60,2210,1); /*fangel*/
	Add(1,5047,1,0,0,1062,500,975,1);	/*fashion*/
	Add(1,5170,1,0,0,5172,1,7063,100,982,1); /*fberet*/
	Add(1,5380,1,0,0,5065,2); /*fish*/
	Add(1,5303,1,0,0,712,100,710,5,629,5,10009,1); /*flowerc*/
	Add(1,5302,1,0,0,7198,300,982,1,7771,1); /*flowerl*/
	Add(1,2219,1,0,0,914,500,7166,500,2218,5); /*Flu Mask [1]*/
	Add(1,5056,1,0,0,5079,1,578,100); /*fruit*/
	Add(1,5390,1,0,0,2236,2,978,1,1034,50,2294,2); /*ftwin*/
	
	Add(2,5144,1,0,0,2214,1,2221,1,7567,25,1001,200); /*gambler*/
	Add(2,5063,1,0,0,970,1,930,500); /*gband*/
	Add(2,5193,1,0,0,2208,1,979,1); /*gribbon*/
	Add(2,5021,1,0,0,2233,1,969,1,999,20,949,80,938,800); /*grief*/
	Add(2,5179,1,0,0,2234,1,969,3,2610,4,13106,2); /*gtiara*/
	Add(2,5176,1,0,0,706,1,1019,500,7200,10,7015,20,2267,1,952,100,1028,100); /*hahoe*/
	Add(2,5001,1,0,0,999,40,984,1,970,1,1003,1); /*head*/
	Add(2,5025,1,0,0,2229,1,2254,1,7036,5); /*helma*/
	Add(2,5061,1,20000,0,2269,1,999,10); /*hflower*/
	Add(2,5139,1,0,0,5085,1,710,5,7510,1,975,1); /*hibiscus*/
	Add(2,5070,1,0,0,7216,300,7097,300,2211,1,982,1); /*hotb*/
	Add(2,5071,1,10000,0,5010,1,5049,1,7101,10); /*indian*/
	Add(2,5173,1,0,0,7445,7,7446,7,7447,7,7478,7,945,300,983,1,733,5,2221,1); /*jugdge*/
	Add(2,5143,1,0,0,5090,1,1020,300,975,1,982,1); /*kabuki*/
	Add(2,5020,1,0,0,2215,1,2210,1,7063,20); /*kafra*/
	Add(2,5181,1,0,0,7511,100,7340,200,7023,10); /*Helm of dark*/
	Add(2,5022,1,0,0,969,10,999,40,1003,50,984,2); /*helm of sungod*/
	Add(2,5396,1,0,0,5058,1,980,1,1022,53);	/*jasper*/
	Add(2,5363,1,0,0,5120,1,2261,1,983,20); /*helmofabyss*/
	Add(2,5314,1,0,0,7567,200,5102,1); /*hockey*/
	Add(2,5140,1,0,0,5085,1,2244,1,5191,1,7166,50); /*kawaii*/
	Add(2,5069,1,0,0,1022,999); /*kitsune*/
	Add(2,5185,1,0,0,5061,1,712,100,7194,150,7298,100,520,50,521,50); /*Laurel*/
	Add(2,5130,1,0,0,1048,100,7564,150,517,30); /*Lion*/
	Add(2,5177,1,0,0,706,1,1019,500,7200,10,1049,500,1053,2,980,1); /*Lionm*/
	Add(2,5324,1,0,0,5137,1,7063,20,1034,20); /*littleangel*/
	Add(2,5084,1,0,0,1026,1000,7065,100,945,10,7030,1); /*Lsmokie*/
	Add(2,5027,1,0,0,2252,1,1036,400,7001,50,4052,1); /*mage*/
	Add(2,5241,1,0,0,2252,1,1036,400,7001,50,4052,1,978,1); /*mageb*/
	Add(2,5240,1,0,0,2252,1,1036,400,7001,50,4052,1,982,1,983,1); /*mageg*/
	Add(2,5238,1,0,0,2252,1,1036,400,7001,50,4052,1,975,1); /*mager*/
	Add(2,5239,1,0,0,2252,1,1036,400,7001,50,4052,1,982,1); /*magew*/
	Add(2,5242,1,0,0,2252,1,1036,400,7001,50,4052,1,976,1); /*magey*/
	Add(2,5187,1,0,0,5085,1,5091,1,5117,2,978,1,975,1); /*maiden*/
	Add(2,5138,1,0,0,5123,1,5027,1,7337,50,981,1); /*meyes*/
	Add(2,5099,1,0,0,7267,300,7171,300,1029,5); /*mimi*/
	Add(2,5031,1,0,0,5009,1,5028,1,747,1,999,25); /*mine*/
	Add(2,5081,1,40000,0,2249,1,714,1,969,3); /*mistress*/
	Add(2,5073,1,0,0,2285,1,1550,1); /*model*/
	Add(2,5117,1,50000,0,731,10,748,2,982,1); /*mystic*/
	Add(2,5183,1,0,0,604,100,916,100,7115,100); /*nest*/
	Add(2,5151,1,0,0,5001,1,978,1,991,200); /*notehead*/
	Add(2,2281,1,5000,0,998,20,707,1); /*opera*/
	Add(2,5043,1,0,0,2281,1,1048,50); /*operap*/
	Add(2,5196,1,0,0,2208,1,980,1); /*oribbon*/
	Add(2,5078,1,0,0,5033,1,5064,1); /*otter*/
	Add(2,5004,1,0,0,701,5); /*oxy*/
	Add(2,5060,1,0,0,2236,1,7151,100,7111,100); /*party*/
	Add(2,5023,1,0,0,1059,150,907,100,978,1); /*parcel*/
	Add(2,5271,1,0,0,2254,1,723,1,7301,20,999,50,978,1); /*phoenix*/
	Add(2,5352,1,0,0,5035,1,979,1,938,100); /*poporing*/
	Add(2,2293,1,0,0,1049,4); /*pretender*/
	Add(2,5194,1,0,0,2208,1,975,1,982,1); /*pribbon*/
	Add(2,5202,1,0,0,5035,1,1062,100,535,80); /*pumpkin*/
	Add(2,5182,1,0,0,5008,10,5118,1,1060,100,2210,1); /*puppy*/

	Add(3,5213,1,0,0,2214,1,983,1,7063,30); /*rabbit*/
	Add(3,5033,1,0,0,1036,20,2213,1,7065,300,7012,200); /*raccoon*/
	Add(3,5039,1,0,0,7030,50,978,1,5015,1); /*rainbow*/
	Add(3,5288,1,0,0,5047,1,2276,1); /*redglass*/
	Add(3,5195,1,0,0,2208,1,975,1); /*ribbon*/
	Add(3,5211,1,0,0,5045,1,5083,1,7063,40,7198,300,982,1,975,1); /*ribbonh*/
	Add(3,5420,1,0,0,7096,500,7157,200,5421,1); /*maskofifrit*/
	Add(3,5375,1,0,0,5094,1,10018,2,968,5,7440,30); /*orcheadress*/
	Add(3,5094,1,0,0,968,100,2299,1,1124,1,931,1000); /*orch*/
	Add(3,5315,1,0,0,2276,1,5135,1,7094,50,7353,50); /*observer*/
	Add(3,5299,1,0,0,7441,20,949,50,916,15,7115,10,7440,20,7063,10,7200,10,2214,1); /*pagdayaw*/
	Add(3,5286,1,0,0,2254,2,7101,200,2210,2,7510,10); /*peco*/
	Add(3,5285,1,0,0,7192,120,10011,1); /*pinwheel*/
	Add(3,5255,1,0,0,5153,1,741,10,5132,1,5074,1); /*poring tower*/
	Add(3,5293,1,0,0,577,20,7134,1,581,3,7454,2,7455,2,553,300,521,300); /*ramen*/
	Add(3,5208,1,0,0,1550,1,1553,7,1556,7,1554,7,1557,7,1555,7,7015,30); /*rideword*/
	Add(3,5529,1,0,0,2229,1,932,500,628,300); /*satanic bone helm*/
	Add(3,5359,1,0,0,2284,1,5019,1,975,1,5016,3,7063,200); /*ship captains*/
	Add(3,5212,1,0,0,1820,2,5011,1,2651,1,4125,1); /*solar*/
	Add(3,18505,1,0,0,2229,1,932,500,628,300); /*soul of umbala*/
	Add(3,2202,1,0,0,7799,500,7315,500,2201,5); /*Sunglasses [1]*/
	Add(3,5256,1,0,0,7510,1,2210,1,7063,50); /*valkf*/
	Add(3,5171,1,0,0,4219,1,4114,1,4177,1,4259,1,4212,1,4073,1,4112,1,4081,1,4251,1,4166,1,7511,1000,7563,1000); /*valk*/
	Add(3,2278,1,0,0,705,10,909,10,914,10); /*smile*/
	Add(3,5203,1,0,0,2278,1,1015,1,999,5); /*smiling*/
	Add(3,18508,1,0,0,957,300,907,300,904,300,7568,300,675,10); /*RWC 2010 Indonesia */
	
	Add(3,18670,1,0,0,1059,300,945,300,911,300,7071,300,7166,300,675,10); /*Hankie In Mouth*/
	Add(3,18677,1,0,0,1067,300,938,300,7035,1,1095,300,675,10); /*Cherry Twig in Mouth*/
	Add(3,18673,1,0,0,7054,300,7053,300,7291,3,7319,300,904,300,675,10); /*Chibi Pope*/
	Add(3,18666,1,0,0,7289,1,7005,300,1038,300,938,300,675,10); /*CD in Mouth*/
	Add(3,5594,1,0,0,912,300,1023,300,1062,300,7100,300,675,10); /*Donut in Mouth*/
	Add(3,5471,1,0,0,912,300,1023,300,7298,300,1062,300,7097,300,675,10); /*Hairband of Reginleif*/
	Add(3,18528,1,0,0,7005,300,1038,300,983,3,1059,300,945,300,7054,300,914,300,675,10); /*Drooping Neko Crew*/
	Add(3,18641,1,0,0,7563,300,1038,300,963,300,912,300,949,300); /*Ribbon Magic Hat*/
	Add(3,18566,1,0,0,1026,300,912,300,1023,300,7298,300,675,10); /* Nut Donut in Mouth*/
	Add(3,18729,1,0,0,7097,500,7120,200,7752,300,2678,1,2679,1,675,10); /*MVP Basketball hat*/
	Add(3,18716,1,0,0,578,300,514,300,1062,300,7100,300,675,10); /*Strawberry in Mout*/
	Add(3,18657,1,0,0,1034,300,1035,300,1037,300,2257,1,916,500,675,10); /*Pegasus Wing Ears*/

// -----------------------------------------------------------

	freeloop(0);
	set .menu$,"";
	for(set .@i,1; .@i<=getarraysize(.Shops$); set .@i,.@i+1) {
		set .menu$, .menu$+.Shops$[.@i]+":";
		npcshopdelitem "qshop"+.@i,909;
	}
	end;

OnMenu:
	set .@size, getarraysize(@i);
	if (!.@size) set .@i, select(.menu$);
	else if (.@size == 1) set .@i, @i[0];
	else {
		for(set .@j,0; .@j<.@size; set .@j,.@j+1)
			set .@menu$, .@menu$+.Shops$[@i[.@j]]+":";
		set .@i, @i[select(.@menu$)-1];
	}
	deletearray @i[0],getarraysize(@i);
	if (.Shops$[.@i] == "") {
		message strcharinfo(0),"An error has occurred.";
		end;
	}
	dispbottom "Select one item at a time.";
	callshop "qshop"+.@i,1;
	npcshopattach "qshop"+.@i;
	end;

OnBuyItem:
	// .@q[] : RewardID, BoughtAmt, RewardAmt, BaseAmt, ReqZeny, ReqPts, { ReqItem, ReqAmt, ... }
	setarray .@q[0],@bought_nameid[0],((@bought_quantity[0] > .MaxStack)?.MaxStack:@bought_quantity[0]);
	copyarray .@q[3],getd(".q_"+.@q[0]+"[0]"),getarraysize(getd(".q_"+.@q[0]));
	set .@q[2],.@q[1]*.@q[3];
	if (!.@q[2] || .@q[2] > 30000) {
		message strcharinfo(0),"You can't purchase that many "+getitemname(.@q[0])+".";
		end;
	}
	mes "[Quest Shop]";
	mes "Reward: ^0055FF"+((.@q[2] > 1)?.@q[2]+"x ":"")+Slot(.@q[0])+"^000000";
	mes "Requirements:";
	if (.@q[4]) mes " > "+Chk(Zeny,.@q[4]*.@q[1])+(.@q[4]*.@q[1])+" Zeny^000000";
	if (.@q[5]) mes " > "+Chk(getd(.Points$[0]),.@q[5]*.@q[1])+(.@q[5]*.@q[1])+" "+.Points$[1]+" ("+getd(.Points$[0])+"/"+(.@q[5]*.@q[1])+")^000000";
	if (.@q[6]) for(set .@i,6; .@i<getarraysize(.@q); set .@i,.@i+2)
		mes " > "+Chk(countitem(.@q[.@i]),.@q[.@i+1]*.@q[1])+((.ShowID)?"{"+.@q[.@i]+"} ":"")+Slot(.@q[.@i])+" ("+countitem(.@q[.@i])+"/"+(.@q[.@i+1]*.@q[1])+")^000000";
	next;
	setarray @qe[1], getiteminfo(.@q[0],5), getiteminfo(.@q[0],11);
	if (@qe[2] > 0 && ((@qe[1] & 1) || (@qe[1] & 256) || (@qe[1] & 512) || (@qe[1] & 1024) || (@qe[1] & 2048) || (@qe[1] & 4096) || (@qe[1] & 4) || (@qe[1] & 8192)))
		set .@preview,1;
	addtimer 1000, strnpcinfo(0)+"::OnEnd";
	while(1) {
		switch(select(" ~ Purchase ^0055FF"+getitemname(.@q[0])+"^000000:"+((.@preview && !@qe[7])?" ~ Preview...":"")+": ~ ^777777Cancel^000000")) {
		case 1:
			if (@qe[0]) { 
				mes "[Quest Shop]";
				mes "You're missing one or more quest requirements.";
				close;
			}
			if (!checkweight(.@q[0],.@q[2])) {
				mes "[Quest Shop]";
				mes "^FF0000You need "+(((.@q[2]*getiteminfo(.@q[0],6))+Weight-MaxWeight)/10)+" additional weight capacity to complete this trade.^000000";
				close;
			}
			if (.@q[4]) set Zeny, Zeny-(.@q[4]*.@q[1]);
			if (.@q[5]) setd .Points$[0], getd(.Points$[0])-(.@q[5]*.@q[1]);
			if (.@q[6]) for(set .@i,6; .@i<getarraysize(.@q); set .@i,.@i+2)
				delitem .@q[.@i],.@q[.@i+1]*.@q[1];
			getitem .@q[0],.@q[2];
			if (.Announce) announce strcharinfo(0)+" has created "+((.@q[2] > 1)?.@q[2]+"x "+getitemname(.@q[0]):A_An(getitemname(.@q[0])))+"!",0;
			specialeffect2 EF_FLOWERLEAF;
			close;
		case 2:
			setarray @qe[3], getlook(LOOK_HEAD_BOTTOM), getlook(LOOK_HEAD_TOP), getlook(LOOK_HEAD_MID), getlook(LOOK_ROBE), 1;
			if ((@qe[1] & 1) || (@qe[1] & 4096)) changelook LOOK_HEAD_BOTTOM, @qe[2];
			else if ((@qe[1] & 256) || (@qe[1] & 1024)) changelook LOOK_HEAD_TOP, @qe[2];
			else if ((@qe[1] & 512) || (@qe[1] & 2048)) changelook LOOK_HEAD_MID, @qe[2];
			else if ((@qe[1] & 4) || (@qe[1] & 8192)) changelook LOOK_ROBE, @qe[2];
			break;
		case 3:
			close;
		}
	}

OnEnd:
	if (@qe[7]) {
		changelook LOOK_HEAD_BOTTOM, @qe[3];
		changelook LOOK_HEAD_TOP, @qe[4];
		changelook LOOK_HEAD_MID, @qe[5];
		changelook LOOK_ROBE, @qe[6];
	}
	deletearray @qe[0],8;
	end;

function Add {
	if (getitemname(getarg(1)) == "null") {
		debugmes "Quest reward #"+getarg(1)+" invalid (skipped).";
		return;
	}
	setarray .@j[0],getarg(2),getarg(3),getarg(4);
	for(set .@i,5; .@i<getargcount(); set .@i,.@i+2) {
		if (getitemname(getarg(.@i)) == "null") {
			debugmes "Quest requirement #"+getarg(.@i)+" invalid (skipped).";
			return;
		} else
			setarray .@j[.@i-2],getarg(.@i),getarg(.@i+1);
	}
	copyarray getd(".q_"+getarg(1)+"[0]"),.@j[0],getarraysize(.@j);
	npcshopadditem "qshop"+getarg(0),getarg(1),((.ShowZeny)?getarg(3):0);
	return;
}

function Chk {
	if (getarg(0) < getarg(1)) {
		set @qe[0],1;
		return "^FF0000";
	} else
		return "^00FF00";
}

function Slot {
	set .@s$,getitemname(getarg(0));
	switch(.ShowSlot) {
		case 1: if (!getitemslots(getarg(0))) return .@s$;
		case 2: if (getiteminfo(getarg(0),2) == 4 || getiteminfo(getarg(0),2) == 5) return .@s$+" ["+getitemslots(getarg(0))+"]";
		default: return .@s$;
	}
}

function A_An {
	setarray .@A$[0],"a","e","i","o","u";
	set .@B$, "_"+getarg(0);
	for(set .@i,0; .@i<5; set .@i,.@i+1)
		if (compare(.@B$,"_"+.@A$[.@i])) return "an "+getarg(0);
	return "a "+getarg(0);
}
}

function	script	qshop	{
	deletearray @i[0],getarraysize(@i);
	for(set .@i,0; .@i<getargcount(); set .@i,.@i+1)
		set @i[.@i],getarg(.@i);
	doevent "quest_shop::OnMenu";
	end;
}