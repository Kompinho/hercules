// Copyright (c) Hercules Dev Team, licensed under GNU GPL.
// See the LICENSE file
// Portions Copyright (c) Athena Dev Teams
#ifndef	_TIMER_H_
#define	_TIMER_H_
#include "../common/cbasetypes.h"

#define DIFF_TICK(a,b) ((int)((a)-(b)))

#define INVALID_TIMER -1

// timer flags
enum {
	TIMER_ONCE_AUTODEL = 0x01,
	TIMER_INTERVAL = 0x02,
	TIMER_REMOVE_HEAP = 0x10,
};

// Struct declaration

typedef int (*TimerFunc)(int tid, unsigned int tick, int id, intptr_t data);

struct TimerData {
	unsigned int tick;
	TimerFunc func;
	unsigned char type;
	int interval;

	// general-purpose storage
	int id; 
	intptr_t data;
};


/*=====================================
* Interface : timer.h 
* Generated by HerculesInterfaceMaker
* created by Susu
*-------------------------------------*/
struct timer_interface {

	/* funcs */
	unsigned int (*gettick) (void);
	unsigned int (*gettick_nocache) (void);

	int (*add) (unsigned int tick, TimerFunc func, int id, intptr_t data);
	int (*add_interval) (unsigned int tick, TimerFunc func, int id, intptr_t data, int interval);
	const struct TimerData *(*get) (int tid);
	int (*delete) (int tid, TimerFunc func);

	int (*addtick) (int tid, unsigned int tick);
	int (*settick) (int tid, unsigned int tick);

	int (*add_func_list) (TimerFunc func, char* name);

	unsigned long (*get_uptime) (void);

	int (*do_timer) (unsigned int tick);
	void (*init) (void);
	void (*final) (void);
};

struct timer_interface *timer;

void timer_defaults(void);

#endif /* _TIMER_H_ */
